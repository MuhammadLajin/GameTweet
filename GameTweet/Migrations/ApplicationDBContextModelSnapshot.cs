// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer.Context;

namespace GameTweet.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalReplies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TweetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "comment 1 on tweet 1 from user 2",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 625, DateTimeKind.Local).AddTicks(1486),
                            TotalReplies = 4,
                            TweetId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "comment 2 on tweet 1 from user 3",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 625, DateTimeKind.Local).AddTicks(2974),
                            TotalReplies = 0,
                            TweetId = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.ToTable("Reply");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentId = 1,
                            Content = "reply 1 on comment 1 from user 1",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 626, DateTimeKind.Local).AddTicks(498),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentId = 1,
                            Content = "reply 2 on comment 1 from user 2",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 626, DateTimeKind.Local).AddTicks(884),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 1,
                            Content = "reply 3 on comment 1 from user 1",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 626, DateTimeKind.Local).AddTicks(932),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CommentId = 1,
                            Content = "reply 4 on comment 1 from user 3",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 626, DateTimeKind.Local).AddTicks(965),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Tweet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tweet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "tweet 1 from user 1",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 623, DateTimeKind.Local).AddTicks(7446),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "tweet 2 from user 2",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 623, DateTimeKind.Local).AddTicks(7957),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "tweet 3 from user 3",
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 623, DateTimeKind.Local).AddTicks(8037),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 618, DateTimeKind.Local).AddTicks(9207),
                            Name = "User 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 622, DateTimeKind.Local).AddTicks(8311),
                            Name = "User 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 3, 19, 23, 37, 2, 622, DateTimeKind.Local).AddTicks(8691),
                            Name = "User 3"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Comment", b =>
                {
                    b.HasOne("DomainLayer.Models.Tweet", "Tweet")
                        .WithMany("Comment")
                        .HasForeignKey("TweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tweet");
                });

            modelBuilder.Entity("DomainLayer.Models.Reply", b =>
                {
                    b.HasOne("DomainLayer.Models.Comment", "Comment")
                        .WithMany("Reply")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("DomainLayer.Models.Tweet", b =>
                {
                    b.HasOne("DomainLayer.Models.User", "User")
                        .WithMany("Tweet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainLayer.Models.Comment", b =>
                {
                    b.Navigation("Reply");
                });

            modelBuilder.Entity("DomainLayer.Models.Tweet", b =>
                {
                    b.Navigation("Comment");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Navigation("Tweet");
                });
#pragma warning restore 612, 618
        }
    }
}
